plugins {
    id 'java-library'
    id('io.qameta.allure') version '2.12.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.21.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

group = 'inna_tyulyaeva'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation (
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.selenide:selenide-selenoid:2.3.4",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.codeborne:selenide:6.19.1",
            "org.junit.jupiter:junit-jupiter:5.9.3",
            "com.github.javafaker:javafaker:1.0.2",
            "com.fasterxml.jackson.core:jackson-core:2.13.1",
            "com.fasterxml.jackson.core:jackson-annotations:2.13.1",
            "com.fasterxml.jackson.core:jackson-databind:2.14.1",
            'commons-io:commons-io:2.15.0',
            'com.codeborne:pdf-test:1.5.0',
            'org.assertj:assertj-core:3.27.3',
            'com.codeborne:xls-test:1.4.3',
            'com.google.code.gson:gson:2.13.1',
            'org.slf4j:slf4j-simple:2.0.17',
            'com.opencsv:opencsv:5.9',
            "org.aeonbits.owner:owner:1.0.4",
            'io.qameta.allure:allure-selenide:2.21.0'
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0')
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task rest_api(type: Test) {
    useJUnitPlatform {
        includeTags("rest_api")
    }
}


